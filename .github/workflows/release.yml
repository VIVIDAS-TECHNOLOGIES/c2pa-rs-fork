name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  pull-requests: write
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-22.04
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run release-plz
        id: release-plz
        uses: MarcoIeni/release-plz-action@v0.5.107
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_SECRET }}

      - name: Clean up stale release-plz branches
        run: |
          git --no-pager branch --remote |\
            grep 'origin/release-plz-' |\
            sort -r |\
            tail -n +2 |\
            sed 's/origin\///' |\
            xargs -I {} git push origin --delete {}
  
      - name: Identify c2patool release
        id: sniff-c2patool-release-tag
        run: |
          echo tag=`git tag --contains HEAD | grep '^c2patool-'` >> "$GITHUB_OUTPUT" || true
    
  publish-c2patool-binaries:
    name: Publish c2patool binaries
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-22.04, windows-latest]
        rust_version: [stable]
        experimental: [false]
        include:
          - os: macos-latest
            artifact_name: c2patool_mac_universal.zip
            uploaded_asset_name: ${{ github.ref_name }}-universal-apple-darwin.zip
            sbom_asset_name: ${{ github.ref_name }}-universal-apple-darwin-sbom.json
          - os: ubuntu-22.04
            artifact_name: c2patool_linux_intel.tar.gz
            uploaded_asset_name: ${{ github.ref_name }}-x86_64-ubuntu-22.04-linux-gnu.tar.gz
            sbom_asset_name: ${{ github.ref_name }}-x86_64-ubuntu-22.04-linux-gnu-sbom.json
          - os: windows-latest
            artifact_name: c2patool_win_intel.zip
            uploaded_asset_name: ${{ github.ref_name }}-x86_64-pc-windows-msvc.zip
            sbom_asset_name: ${{ github.ref_name }}-x86_64-pc-windows-msvc-sbom.json

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_version }}
          components: llvm-tools-preview

      - name: Install cargo-sbom
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-sbom
          version: "0.9.1"

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run make release
        run: cd cli && make release

      - name: Upload binary to GitHub
        if: ${{ needs.release-plz.outputs.c2patool-release-tag }}
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.uploaded_asset_name }}
          tag: ${{ github.ref_name }}
          overwrite: true

      - name: Generate SBOM
        run: cd cli && cargo sbom > c2patool-sbom.json

      - name: Upload SBOM to Github
        if: ${{ needs.release-plz.outputs.c2patool-release-tag }}
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: cli/c2patool-sbom.json
          asset_name: ${{ matrix.sbom_asset_name }}
          tag: ${{ github.ref_name }}
          overwrite: true
